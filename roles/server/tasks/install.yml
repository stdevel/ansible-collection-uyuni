---
- name: Install packages
  community.general.zypper:
    name: "{{ server_pkgs }}"
  notify: Reboot system (if immutable)
  become: true

- name: Ensure that Podman volumes work as expected
  containers.podman.podman_volume:
    name: test_volume
  become: true

- name: Prepare storage for volumes and database
  ansible.builtin.command:
    cmd: "mgr-storage-server {{ server_disk_volumes }} {{ server_disk_database }}"
  when:
    - server_disk_volumes is defined
    - server_disk_database is defined
  become: true

- name: Prepare storage for volumes
  ansible.builtin.command:
    cmd: "mgr-storage-server {{ server_disk_volumes }}"
  when: server_disk_volumes is defined
  become: true

- name: Stage deploy configuration
  ansible.builtin.template:
    src: uyuni.yml.j2
    dest: "/root/uyuni.yml"
    mode: "0644"
    owner: root
    group: root
  become: true

- name: Download air-gapped container image
  community.general.zypper:
    name: suse-manager-{{ server_suma_release }}-{{ ansible_architecture }}-server-image
  notify: Reboot system (if immutable)
  when: server_suma_airgapped
  become: true

- name: Enable netavark workaround
  community.general.ini_file:
    path: /etc/systemd/system/uyuni-server.service.d/netavark.conf
    owner: root
    group: root
    mode: '0640'
    section: Service
    option: Environment
    value: NETAVARK_FW=iptables
    no_extra_spaces: true
    backup: true
  when: ansible_distribution | lower in ['opensuse microos', 'opensuse tumbleweed']
  become: true

- name: Trigger reboot (if necessary)
  ansible.builtin.meta: flush_handlers

- name: Run installation
  ansible.builtin.command: "mgradm -c /root/uyuni.yml install podman {{ ansible_fqdn }}"
  args:
    creates: /root/.MANAGER_INITIALIZATION_COMPLETE
  become: true
  notify: Create initialization file
